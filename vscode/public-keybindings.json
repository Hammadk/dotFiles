// This files is typically kept in Users/USER_NAME/Library/ApplicationSupport/Code/User/keybindings.json"
[
  {
    "key": "ctrl+alt+z",
    "command": "-DevTestRunner.runLastTest",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+i",
    "command": "-DevTestRunner.runTestCase",
    "when": "editorTextFocus && resourceExtname == '.rb' && resourceFilename =~ /_(test|spec).rb/"
  },
  {
    "key": "\\ t",
    "command": "DevTestRunner.runLastTest",
    "when": "!editorTextFocus || resourceFilename =~ /^(?!.*_(test|spec)[.]rb$).*$/"
  },
  {
    "key": "\\ shift+t",
    "command": "DevTestRunner.runLastTest",
    "when": "!editorTextFocus || resourceFilename =~ 3^(?!.*_(test|spec)[.]rb$).*$/"
  },
  {
    "key": "ctrl+\\",
    "command": "type",
    "args": {
      "text": "\\"
    }
  },
  {
    "key": "\\ shift+t",
    "command": "DevTestRunner.runTestCase",
    "when": "editorTextFocus && resourceExtname == '.rb' && resourceFilename =~ /_(test|spec).rb/ || editorTextFocus && resourceExtname == '.tsx' && resourceFilename =~ /.test.tsx/"
  },
  {
    "key": "\\ t",
    "command": "DevTestRunner.runAllTests",
    "when": "editorTextFocus && resourceExtname == '.rb' && resourceFilename =~ /_(test|spec).rb/ || editorTextFocus && resourceExtname == '.tsx' && resourceFilename =~ /.test.tsx/"
  },
  {
    "key": "shift+cmd+r",
    "command": "-DevTestRunner.runAllTests",
    "when": "editorTextFocus && resourceExtname == '.rb' && resourceFilename =~ /_(test|spec).rb/ || editorTextFocus && resourceExtname == '.tsx' && resourceFilename =~ /.test.tsx/"
  },
  {
    "key": "cmd+4",
    "command": "terminal.focus"
  },
  {
    "key": "cmd+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "\\ r",
    "command": "editor.action.referenceSearch.trigger"
  },
  {
    "key": "\\ shift+d",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+shift+n",
    "command": "notebook.cell.cursorPageDown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "pagedown",
    "command": "-notebook.cell.cursorPageDown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pagedown",
    "command": "-workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+n",
    "command": "cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "pagedown",
    "command": "-cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "pagedown",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "notifications.focusLastToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "pagedown",
    "command": "-notifications.focusLastToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+shift+n",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "pagedown",
    "command": "-selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "-workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.selectNextPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "pagedown",
    "command": "-workbench.action.terminal.selectNextPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+shift+p",
    "command": "notebook.cell.cursorPageUp",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "pageup",
    "command": "-notebook.cell.cursorPageUp",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pageup",
    "command": "-workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+p",
    "command": "cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "pageup",
    "command": "-cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "pageup",
    "command": "-list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "pageup",
    "command": "-notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+shift+p",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "pageup",
    "command": "-selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pageup",
    "command": "-workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.terminal.selectPrevPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "pageup",
    "command": "-workbench.action.terminal.selectPrevPageSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "key": "\\ d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "\\ d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+\\",
    "command": "type",
    "args": {
        "text": "\\"
    }
}
]
